{"version":3,"sources":["components/SideBarNav/SideBarNav.js","containers/SideBar/SideBar.js","components/TopBar/TopBar.js","hoc/Layout/Layout.js","containers/HomePage/HomePage.js"],"names":["useStyles","makeStyles","theme","root","item","display","paddingTop","paddingBottom","button","color","colors","blueGrey","padding","justifyContent","textTransform","letterSpacing","width","fontWeight","typography","fontWeightMedium","icon","palette","height","alignItems","marginRight","spacing","active","primary","main","CustomRouterLink","forwardRef","props","ref","style","flexGrow","SidebarNav","pages","className","rest","classes","List","clsx","map","page","ListItem","disableGutters","key","title","Button","activeClassName","component","to","href","drawer","breakpoints","up","marginTop","backgroundColor","white","flexDirection","divider","margin","nav","marginBottom","connect","state","role","open","variant","onClose","doctorPages","process","patientPages","Drawer","anchor","paper","boxShadow","signOutButton","marginLeft","Topbar","onSidebarOpen","AppBar","Toolbar","Hidden","lgUp","IconButton","onClick","shiftContent","paddingLeft","content","Layout","children","useTheme","isDesktop","useMediaQuery","defaultMatches","useState","openSidebar","setOpenSidebar","shouldOpenSidebar","RecordPage","React","lazy","DoctorPage","PatientPage","AccessPage","authRedirectPath","route","path","render","fallback","Backdrop","CircularProgress"],"mappings":"gQAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACNC,KAAM,CACJC,QAAS,OACTC,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNC,MAAOC,IAAOC,SAAS,KACvBC,QAAS,WACTC,eAAgB,aAChBC,cAAe,OACfC,cAAe,EACfC,MAAO,OACPC,WAAYf,EAAMgB,WAAWC,kBAE/BC,KAAM,CACJX,MAAOP,EAAMmB,QAAQD,KACrBJ,MAAO,GACPM,OAAQ,GACRjB,QAAS,OACTkB,WAAY,SACZC,YAAatB,EAAMuB,QAAQ,IAE7BC,OAAQ,CACNjB,MAAOP,EAAMmB,QAAQM,QAAQC,KAC7BX,WAAYf,EAAMgB,WAAWC,iBAC7B,UAAW,CACTV,MAAOP,EAAMmB,QAAQM,QAAQC,WAK7BC,EAAmBC,sBAAW,SAACC,EAAOC,GAAR,OAClC,yBAAKA,IAAKA,EAAKC,MAAO,CAAEC,SAAU,IAChC,kBAAC,IAAeH,OAiCLI,EA7BI,SAAAJ,GAAU,IACnBK,EAA8BL,EAA9BK,MAAOC,EAAuBN,EAAvBM,UAAcC,EADH,YACYP,EADZ,uBAGpBQ,EAAUvC,IAEhB,OACE,kBAACwC,EAAA,EAAD,iBAAUF,EAAV,CAAgBD,UAAWI,YAAKF,EAAQpC,KAAMkC,KAC3CD,EAAMM,KAAI,SAAAC,GAAI,OACb,kBAACC,EAAA,EAAD,CAAUP,UAAWE,EAAQnC,KAAMyC,gBAAc,EAACC,IAAKH,EAAKI,OAC1D,kBAACC,EAAA,EAAD,CACEC,gBAAiBV,EAAQb,OACzBW,UAAWE,EAAQ/B,OACnB0C,UAAWrB,EACXsB,GAAIR,EAAKS,MAET,yBAAKf,UAAWE,EAAQnB,MAAOuB,EAAKvB,MACnCuB,EAAKI,a,gFCnDZ/C,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCmD,OAAO,aACLrC,MAAO,KACNd,EAAMoD,YAAYC,GAAG,MAAQ,CAC5BC,UAAW,GACXlC,OAAQ,sBAGZnB,KAAM,CACJsD,gBAAiBvD,EAAMmB,QAAQqC,MAC/BrD,QAAS,OACTsD,cAAe,SACfrC,OAAQ,OACRV,QAASV,EAAMuB,QAAQ,IAEzBmC,QAAS,CACPC,OAAQ3D,EAAMuB,QAAQ,EAAG,IAE3BqC,IAAK,CACHC,aAAc7D,EAAMuB,QAAQ,QAmEjBuC,eANS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAMC,QAIDF,EA/DC,SAAAjC,GAAU,IAChBoC,EAA4CpC,EAA5CoC,KAAMC,EAAsCrC,EAAtCqC,QAASC,EAA6BtC,EAA7BsC,QAAShC,EAAoBN,EAApBM,UAAW6B,EAASnC,EAATmC,KAErC3B,EAAUvC,IACVsE,EAAc,CAClB,CACEvB,MAAO,cACPK,KAAK,GAAD,OAAKmB,iBAAL,gBACJnD,KAAM,kBAAC,IAAD,OAER,CACE2B,MAAO,mBACPK,KAAK,GAAD,OAAKmB,iBAAL,kBACJnD,KAAM,kBAAC,IAAD,QAGJoD,EAAe,CACnB,CACEzB,MAAO,SACPK,KAAK,GAAD,OAAKmB,iBAAL,WACJnD,KAAM,kBAAC,IAAD,OAER,CACE2B,MAAO,mBACPK,KAAK,GAAD,OAAKmB,iBAAL,kBACJnD,KAAM,kBAAC,IAAD,OAER,CACE2B,MAAO,cACPK,KAAK,GAAD,OAAKmB,iBAAL,eACJnD,KAAM,kBAAC,IAAD,QAGV,OACE,kBAACqD,EAAA,EAAD,CACEC,OAAO,OACPnC,QAAS,CAAEoC,MAAOpC,EAAQc,QAC1BgB,QAASA,EACTF,KAAMA,EACNC,QAASA,GAET,yBAAK/B,UAAWI,YAAKF,EAAQpC,KAAMkC,IACjC,kBAAC,EAAD,CACEA,UAAWE,EAAQuB,IACnB1B,MAAgB,YAAT8B,EAAqBM,EAAeF,S,wECrE/CtE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJyE,UAAW,QAEb1C,SAAU,CACRA,SAAU,GAEZ2C,cAAe,CACbC,WAAY5E,EAAMuB,QAAQ,GAC1BhB,MAAO,QACP,UAAW,CACTA,MAAO,aAiCEsE,EA5BA,SAAAhD,GAAU,IACfM,EAAsCN,EAAtCM,UAAW2C,EAA2BjD,EAA3BiD,cAAkB1C,EADf,YACwBP,EADxB,+BAGhBQ,EAAUvC,IAEhB,OACE,kBAACiF,EAAA,EAAD,iBAAY3C,EAAZ,CAAkBD,UAAWI,YAAKF,EAAQpC,KAAMkC,KAC9C,kBAAC6C,EAAA,EAAD,KACE,4CACA,yBAAK7C,UAAWE,EAAQL,WACxB,kBAAC,IAAD,CAASiB,GAAG,UAAUd,UAAWE,EAAQsC,eACvC,kBAAC,IAAD,OAEF,kBAACM,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,EAAA,EAAD,CAAY5E,MAAM,UAAU6E,QAASN,GACnC,kBAAC,IAAD,WChCNhF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,aACHG,WAAY,GACZgB,OAAQ,QACPpB,EAAMoD,YAAYC,GAAG,MAAQ,CAC5BjD,WAAY,KAGhBiF,aAAc,CACZC,YAAa,KAEfC,QAAS,CACPnE,OAAQ,YA+CGoE,EA3CA,SAAA3D,GAAU,IAAD,EACd4D,EAAa5D,EAAb4D,SAEFpD,EAAUvC,IACVE,EAAQ0F,cACRC,EAAYC,YAAc5F,EAAMoD,YAAYC,GAAG,MAAO,CAC1DwC,gBAAgB,IANI,EASgBC,oBAAS,GATzB,mBASfC,EATe,KASFC,EATE,KAmBhBC,IAAoBN,GAAmBI,EAE7C,OACE,yBACE5D,UAAWI,aAAI,mBACZF,EAAQpC,MAAO,GADH,cAEZoC,EAAQgD,aAAeM,GAFX,KAKf,kBAAC,EAAD,CAAQb,cAjBc,WACxBkB,GAAe,MAiBb,kBAAC,EAAD,CACE7B,QAfqB,WACzB6B,GAAe,IAeX/B,KAAMgC,EACN/B,QAASyB,EAAY,aAAe,cAEtC,0BAAMxD,UAAWE,EAAQkD,SAAUE,K,0BCpDnCS,EAAaC,IAAMC,MAAK,WAC5B,OAAO,+DAEHC,EAAaF,IAAMC,MAAK,WAC5B,OAAO,+DAEHE,EAAcH,IAAMC,MAAK,WAC7B,OAAO,iCAEHG,EAAaJ,IAAMC,MAAK,WAC5B,OAAO,gEAmDMtC,uBANS,SAAAC,GACtB,MAAO,CACLyC,iBAAkBzC,EAAMyC,iBACxBxC,KAAMD,EAAMC,QAGDF,EAjDf,SAAkBjC,GAChB,IAAI4E,EAAQ,KA4BZ,OA1BEA,EADiB,YAAf5E,EAAMmC,KAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0C,KAAK,UAAUC,OAAQ,SAAA9E,GAAK,OAAI,kBAACyE,EAAgBzE,MACxD,kBAAC,IAAD,CACE6E,KAAK,iBACLC,OAAQ,SAAA9E,GAAK,OAAI,kBAACqE,EAAerE,MAEnC,kBAAC,IAAD,CAAO6E,KAAK,cAAcC,OAAQ,SAAA9E,GAAK,OAAI,kBAAC0E,EAAe1E,MAC3D,kBAAC,IAAD,CAAUoB,GAAG,aAKf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyD,KAAK,eACLC,OAAQ,SAAA9E,GAAK,OAAI,kBAACwE,EAAexE,MAEnC,kBAAC,IAAD,CACE6E,KAAK,iBACLC,OAAQ,SAAA9E,GAAK,OAAI,kBAACqE,EAAerE,MAEnC,kBAAC,IAAD,CAAUoB,GAAG,kBAKjB,kBAAC,EAAD,KACE,kBAAC,WAAD,CACE2D,SACE,kBAACC,EAAA,EAAD,CAAU5C,MAAM,GACd,kBAAC6C,EAAA,EAAD,CAAkBvG,MAAM,gBAI1BsB,EAAMmC,KAAkDyC,EAA3C,kBAAC,IAAD,CAAUxD,GAAIpB,EAAM2E","file":"static/js/15.a136909b.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { List, ListItem, Button, colors } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: \"flex\",\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: \"10px 8px\",\n    justifyContent: \"flex-start\",\n    textTransform: \"none\",\n    letterSpacing: 0,\n    width: \"100%\",\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    \"& $icon\": {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div ref={ref} style={{ flexGrow: 1 }}>\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List {...rest} className={clsx(classes.root, className)}>\n      {pages.map(page => (\n        <ListItem className={classes.item} disableGutters key={page.title}>\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Drawer } from \"@material-ui/core\";\nimport SidebarNav from \"../../components/SideBarNav/SideBarNav\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up(\"lg\")]: {\n      marginTop: 64,\n      height: \"calc(100% - 64px)\"\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, role } = props;\n\n  const classes = useStyles();\n  const doctorPages = [\n    {\n      title: \"Description\",\n      href: `${process.env.PUBLIC_URL}/description`,\n      icon: <CreateIcon />\n    },\n    {\n      title: \"Patient's Record\",\n      href: `${process.env.PUBLIC_URL}/patientrecord`,\n      icon: <LocalHospitalIcon />\n    }\n  ];\n  const patientPages = [\n    {\n      title: \"Record\",\n      href: `${process.env.PUBLIC_URL}/record`,\n      icon: <FavoriteIcon />\n    },\n    {\n      title: \"Patient's Record\",\n      href: `${process.env.PUBLIC_URL}/patientrecord`,\n      icon: <LocalHospitalIcon />\n    },\n    {\n      title: \"Access List\",\n      href: `${process.env.PUBLIC_URL}/accesslist`,\n      icon: <LockOpenIcon />\n    }\n  ];\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div className={clsx(classes.root, className)}>\n        <SidebarNav\n          className={classes.nav}\n          pages={role === \"patient\" ? patientPages : doctorPages}\n        />\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    role: state.role\n  };\n};\n\nexport default connect(mapStateToProps)(Sidebar);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { AppBar, Toolbar, Hidden, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport { NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: \"none\"\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1),\n    color: \"white\",\n    \"&:hover\": {\n      color: \"blue\"\n    }\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar {...rest} className={clsx(classes.root, className)}>\n      <Toolbar>\n        <p>Health Record</p>\n        <div className={classes.flexGrow} />\n        <NavLink to=\"/logout\" className={classes.signOutButton}>\n          <InputIcon />\n        </NavLink>\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={onSidebarOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport Sidebar from \"../../containers/SideBar/SideBar\";\nimport Topbar from \"../../components/TopBar/TopBar\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: \"100%\"\n  }\n}));\n\nconst Layout = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? \"persistent\" : \"temporary\"}\n      />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React, { Suspense } from \"react\";\nimport Layout from \"../../hoc/Layout/Layout\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nconst RecordPage = React.lazy(() => {\n  return import(\"../RecordPage/RecordPage\");\n});\nconst DoctorPage = React.lazy(() => {\n  return import(\"../DoctorPage/DoctorPage\");\n});\nconst PatientPage = React.lazy(() => {\n  return import(\"../PatientPage/PatientPage\");\n});\nconst AccessPage = React.lazy(() => {\n  return import(\"../AccessPage/AccessPage\");\n});\nfunction HomePage(props) {\n  let route = null;\n  if (props.role === \"patient\") {\n    route = (\n      <Switch>\n        <Route path=\"/record\" render={props => <PatientPage {...props} />} />\n        <Route\n          path=\"/patientrecord\"\n          render={props => <RecordPage {...props} />}\n        />\n        <Route path=\"/accesslist\" render={props => <AccessPage {...props} />} />\n        <Redirect to=\"/record\" />\n      </Switch>\n    );\n  } else {\n    route = (\n      <Switch>\n        <Route\n          path=\"/description\"\n          render={props => <DoctorPage {...props} />}\n        />\n        <Route\n          path=\"/patientrecord\"\n          render={props => <RecordPage {...props} />}\n        />\n        <Redirect to=\"/description\" />\n      </Switch>\n    );\n  }\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <Backdrop open={true}>\n            <CircularProgress color=\"secondary\" />\n          </Backdrop>\n        }\n      >\n        {!props.role ? <Redirect to={props.authRedirectPath} /> : route}\n      </Suspense>\n    </Layout>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    authRedirectPath: state.authRedirectPath,\n    role: state.role\n  };\n};\nexport default connect(mapStateToProps)(HomePage);\n"],"sourceRoot":""}