{"version":3,"sources":["components/AccessItem/AccessItem.js","containers/AccessPage/AccessPage.js"],"names":["AccessItem","props","ListItem","ListItemText","primary","item","name","secondary","doctor","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","delete","id","disabled","isLoading","useStyles","makeStyles","theme","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","margin","spacing","center","textAlign","button","display","connect","state","role","userId","authRedirectPath","token","classes","useState","loading","setLoading","error","setError","accessList","setAccessList","setId","getAccessList","useCallback","a","axios","get","GET_ACCESS_LIST_URL","list","updatedList","data","status","i","length","DATABASE_URL","key","detail","user","userName","push","message","toString","useEffect","accessListContent","onDeleteItem","index","findIndex","DELETE_PERMISSION_URL","then","result","slice","catch","map","className","List","CircularProgress","color","Divider","TextField","label","variant","value","onChange","e","target","Button","infor","put","ADD_PERMISSION_URL","permissionedID","onAddItem"],"mappings":"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","file":"static/js/13.f585edff.chunk.js","sourcesContent":["import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nfunction AccessItem(props) {\n  return (\n    <ListItem>\n      <ListItemText primary={props.item.name} secondary={props.item.doctor} />\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => props.delete(props.item.id)}\n          disabled={props.isLoading}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default AccessItem;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport AccessItem from \"../../components/AccessItem/AccessItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  GET_ACCESS_LIST_URL,\n  DATABASE_URL,\n  ADD_PERMISSION_URL,\n  DELETE_PERMISSION_URL\n} from \"../../api\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  margin: {\n    margin: theme.spacing(4, 0, 2)\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  button: {\n    display: \"block\",\n    margin: \"0 auto\"\n  }\n}));\nfunction AccessPage(props) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [accessList, setAccessList] = useState([]);\n  const [id, setId] = useState(\"\");\n  const getAccessList = useCallback(async () => {\n    setLoading(true);\n    const list = await axios.get(`${GET_ACCESS_LIST_URL}?id=${props.userId}`);\n    const updatedList = [];\n    try {\n      if (list.data.status === \"success\") {\n        for (let i = 0; i < list.data.data.length; i++) {\n          const detail = await axios.get(\n            `${DATABASE_URL}/information.json?auth=${props.token}&orderBy=\"userId\"&equalTo=\"${list.data.data[i].id}\"`\n          );\n          for (let key in detail.data) {\n            let user = {\n              ...list.data.data[i],\n              name: detail.data[key].userName\n            };\n\n            updatedList.push(user);\n          }\n        }\n        setAccessList(updatedList);\n        setLoading(false);\n      } else {\n        setLoading(false);\n        setError(list.data.message);\n      }\n    } catch (error) {\n      setLoading(false);\n      setError(error.toString());\n    }\n  }, [props.token, props.userId]);\n  useEffect(() => {\n    getAccessList();\n  }, [getAccessList]);\n  const onDeleteItem = id => {\n    let index = accessList.findIndex(item => item.id === id);\n    setLoading(true);\n    axios\n      .delete(\n        `${DELETE_PERMISSION_URL}?id=${props.userId}&permissionedID=${id}`\n      )\n      .then(result => {\n        setLoading(false);\n        if (result.data.status === \"success\") {\n          const updatedList = [\n            ...accessList.slice(0, index),\n            ...accessList.slice(index + 1)\n          ];\n          setAccessList(updatedList);\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n  };\n  const onAddItem = id => {\n    setLoading(true);\n    axios\n      .get(\n        `${DATABASE_URL}/information.json?auth=${props.token}&orderBy=\"userId\"&equalTo=\"${id}\"`\n      )\n      .then(infor => {\n        for (let key in infor.data) {\n          axios\n            .put(ADD_PERMISSION_URL, {\n              id: props.userId,\n              permissionedID: id.toString(),\n              role: infor.data[key].role\n            })\n            .then(result => {\n              if (result.data.status === \"success\") {\n                const updatedList = [\n                  ...accessList,\n                  {\n                    id: infor.data[key].userId,\n                    role: infor.data[key].role,\n                    name: infor.data[key].userName\n                  }\n                ];\n                setAccessList(updatedList);\n                setId(\"\");\n                setLoading(false);\n              }\n            })\n            .catch(error => {\n              setLoading(false);\n              setError(error);\n            });\n        }\n      })\n      .catch(error => {\n        setLoading(false);\n        setError(error);\n      });\n  };\n  let accessListContent;\n  if (accessList.length !== 0) {\n    accessListContent = accessList.map(item => (\n      <AccessItem\n        item={item}\n        key={item}\n        delete={onDeleteItem}\n        isLoading={loading}\n      />\n    ));\n  }\n  return (\n    <div className={classes.center}>\n      <h2>Access List</h2>\n      <div>{error}</div>\n      <List>{accessListContent}</List>\n      {loading && <CircularProgress color=\"secondary\" />}\n      <Divider />\n      <TextField\n        label=\"ID\"\n        variant=\"outlined\"\n        value={id}\n        onChange={e => setId(e.target.value)}\n        className={classes.margin}\n      />\n      <Button\n        variant=\"contained\"\n        disabled={!id || loading}\n        color=\"secondary\"\n        className={classes.button}\n        onClick={() => onAddItem(id)}\n      >\n        Add\n      </Button>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    role: state.role,\n    userId: state.userId,\n    authRedirectPath: state.authRedirectPath,\n    token: state.token\n  };\n};\nexport default connect(mapStateToProps)(AccessPage);\n"],"sourceRoot":""}