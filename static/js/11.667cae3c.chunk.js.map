{"version":3,"sources":["../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","containers/RolePage/RolePage.js"],"names":["variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextField","React","props","ref","autoComplete","_props$autoFocus","autoFocus","children","classes","className","_props$color","color","defaultValue","_props$disabled","disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","_props$multiline","multiline","name","onBlur","onChange","onFocus","placeholder","_props$required","required","rows","rowsMax","_props$select","select","SelectProps","type","value","_props$variant","variant","other","_objectWithoutProperties","InputMore","shrink","notched","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","root","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","_props$component","component","Component","focused","margin","muiFormControl","useFormControl","fcs","formControlState","states","contained","marginDense","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","marginTop","main","marginLeft","marginRight","MenuItem","tabIndex","_props$disableGutters","disableGutters","_props$role","role","selected","tabIndexProp","ListItem","button","dense","gutters","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","useEnhancedEffect","window","_props$alignItems","alignItems","_props$button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","_props$divider","divider","focusVisibleClassName","_props$selected","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","alignItemsFlexStart","secondaryAction","focusVisible","ButtonBase","Provider","container","pop","display","justifyContent","position","textDecoration","backgroundColor","action","opacity","borderBottom","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","useStyles","makeStyles","formControl","spacing","minWidth","flexGrow","icon","height","btn","roleList","connect","state","loading","userId","tokenId","token","authRedirectPath","dispatch","onSetAuthRedirectPath","path","actions","onSubmitProfile","userName","useState","labelWidth","setLabelWidth","inputLabel","useRef","useEffect","offsetWidth","userInfo","setUserInfo","handleChange","event","updatedProfile","target","errorMessage","message","Fragment","to","backdrop","open","map","key","onClick"],"mappings":"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","file":"static/js/11.667cae3c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    InputMore.label = label ? React.createElement(React.Fragment, null, label, required && \"\\xA0*\") : label;\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: {\n      dense: classes.dense\n    },\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return React.createElement(ListContext.Provider, {\n      value: childContext\n    }, React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return React.createElement(ListContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: you used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport \"./RolePage.css\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Redirect } from \"react-router-dom\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: \"90%\"\n  },\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  icon: {\n    width: \"30px\",\n    height: \"30px\"\n  },\n  btn: {\n    display: \"block\",\n    margin: \"0 auto\"\n  }\n}));\nconst roleList = [\"patient\", \"doctor\"];\nfunction RolePage(props) {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const inputLabel = React.useRef(null);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const [userInfo, setUserInfo] = React.useState({\n    role: \"\",\n    userName: \"\"\n  });\n  const handleChange = input => event => {\n    const updatedProfile = { ...userInfo };\n    updatedProfile[input] = event.target.value;\n    setUserInfo(updatedProfile);\n  };\n  const classes = useStyles();\n  const {\n    loading,\n    error,\n    role,\n    tokenId,\n    userId,\n    authRedirectPath,\n    onSetAuthRedirectPath,\n    onSubmitProfile\n  } = props;\n  const submitProfile = () => {\n    onSubmitProfile(tokenId, userInfo.role, userInfo.userName, userId);\n    onSetAuthRedirectPath(\"/\");\n  };\n  let errorMessage = null;\n  if (error) {\n    errorMessage = <p>{error.message}</p>;\n  }\n  return (\n    <React.Fragment>\n      {!!role && <Redirect to={authRedirectPath} />}\n      {loading && (\n        <Backdrop className={classes.backdrop} open={true}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n      <div className={classes.root}>\n        <h3>Choose Your Role</h3>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n            Role\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={userInfo.role}\n            onChange={handleChange(\"role\")}\n            labelWidth={labelWidth}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {roleList.map(role => (\n              <MenuItem key={role} value={role}>\n                {role}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Full Name\"\n          variant=\"outlined\"\n          value={userInfo.userName}\n          onChange={handleChange(\"userName\")}\n          className={classes.formControl}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.btn}\n          onClick={submitProfile}\n          disabled={userInfo.role === \"\" || userInfo.userName === \"\"}\n        >\n          Submit\n        </Button>\n        {errorMessage}\n      </div>\n    </React.Fragment>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    role: state.role,\n    userId: state.userId,\n    tokenId: state.token,\n    authRedirectPath: state.authRedirectPath\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path)),\n    onSubmitProfile: (tokenId, role, userName, userId) =>\n      dispatch(actions.setupUser(tokenId, role, userName, userId))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RolePage);\n"],"sourceRoot":""}